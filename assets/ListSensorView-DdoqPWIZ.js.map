{"version":3,"file":"ListSensorView-DdoqPWIZ.js","sources":["../../src/headers/sensorHeaders.ts","../../src/apis/sensorRegistryApi.ts","../../src/components/modal/SensorSettingsModal.vue","../../src/components/modal/ConfirmationModal.vue","../../src/components/List/ListComponent.vue","../../src/models/sensorModel.ts","../../src/views/ListSensorView.vue"],"sourcesContent":["const SENSOR_PORT = 'sensorPort';\nconst SENSOR_IP = 'sensorIp';\nconst SENSOR_NAME = 'sensorName';\nconst SENSOR_CRONJOB_DAYS = 'sensorCronJobDays';\nconst SENSOR_CRONJOB_TIME_HOUR = 'sensorCronJobTimeHour';\nconst SENSOR_CRONJOB_TIME_MINUTE = 'sensorCronJobTimeMinute';\n\nconst UPDATE_NAME_ACTION = 'update-name';\nconst UPDATE_CRONJOB_DAYS = 'update-cronjob-days';\nconst UPDATE_CRONJOB_TIME = 'update-cronjob-time';\n\nexport {\n    SENSOR_IP,\n    SENSOR_PORT,\n    SENSOR_NAME,\n    UPDATE_CRONJOB_DAYS,\n    UPDATE_CRONJOB_TIME,\n    UPDATE_NAME_ACTION,\n    SENSOR_CRONJOB_DAYS,\n    SENSOR_CRONJOB_TIME_HOUR,\n    SENSOR_CRONJOB_TIME_MINUTE,\n};\n","import { config } from '@/config/config';\nimport {\n    SENSOR_CRONJOB_DAYS,\n    SENSOR_CRONJOB_TIME_HOUR,\n    SENSOR_CRONJOB_TIME_MINUTE,\n    SENSOR_IP,\n    SENSOR_NAME,\n    SENSOR_PORT,\n    UPDATE_CRONJOB_DAYS,\n    UPDATE_CRONJOB_TIME,\n    UPDATE_NAME_ACTION,\n} from '@/headers/sensorHeaders';\nimport { USER_TOKEN_HEADER } from '@/headers/userHeaders';\nimport axios from 'axios';\n\nconst GET_ALL_SENSOR_PATH = config.apiBaseUrl + '/sensor/all';\nconst SHUT_DOWN_SENSOR_PATH = config.apiBaseUrl + '/sensor/shutdown';\nconst UPDATE_SENSOR_PATH = config.apiBaseUrl + '/sensor/update';\n\nfunction checkSensorDays(days: string) {\n    const regex = /^[0-6]-[0-6]$/;\n    if (!regex.test(days)) {\n        return false;\n    }\n    const splitted_days = days.split('-');\n    return splitted_days[0] <= splitted_days[1];\n}\n\nfunction checkTime(hours: number, minutes: number) {\n    return hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59;\n}\n\nasync function getAllSensors(token: string) {\n    const headers = { [USER_TOKEN_HEADER]: token };\n    return await axios.get(GET_ALL_SENSOR_PATH, { headers: headers });\n}\n\nasync function shutDownSensorApi(token: string, ip: string, port: string) {\n    const headers = { [USER_TOKEN_HEADER]: token };\n    const data = { [SENSOR_IP]: ip, [SENSOR_PORT]: port };\n    return await axios.delete(SHUT_DOWN_SENSOR_PATH, {\n        headers: headers,\n        params: data,\n    });\n}\n\nasync function updateSensorApi(token: string, ip: string, port: string, newInformation: { [key: string]: string }) {\n    const headers = { [USER_TOKEN_HEADER]: token };\n    const data: { [key: string]: string } = {\n        [SENSOR_IP]: ip,\n        [SENSOR_PORT]: port,\n    };\n    Object.keys(newInformation).forEach((key) => {\n        data[key] = newInformation[key];\n    });\n    return await axios.put(UPDATE_SENSOR_PATH, data, { headers: headers });\n}\n\nasync function updateSensorName(token: string, ip: string, port: string, newName: string) {\n    return await updateSensorApi(token, ip, String(port), { action: UPDATE_NAME_ACTION, [SENSOR_NAME]: newName });\n}\n\nasync function updateSensorCronJobDays(token: string, ip: string, port: string, days: string) {\n    return await updateSensorApi(token, ip, String(port), { action: UPDATE_CRONJOB_DAYS, [SENSOR_CRONJOB_DAYS]: days });\n}\n\nasync function updateSensorCronJobTime(token: string, ip: string, port: string, hour: string, minute: string) {\n    return await updateSensorApi(token, ip, String(port), {\n        action: UPDATE_CRONJOB_TIME,\n        [SENSOR_CRONJOB_TIME_HOUR]: hour,\n        [SENSOR_CRONJOB_TIME_MINUTE]: minute,\n    });\n}\n\nexport {\n    getAllSensors,\n    shutDownSensorApi,\n    updateSensorName,\n    checkSensorDays,\n    updateSensorCronJobDays,\n    updateSensorCronJobTime,\n    checkTime,\n};\n","<template>\n    <div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\n        <div class=\"relative bg-white rounded-lg shadow-lg p-6 w-full max-w-md border-4 border-dashed border-secondary\">\n            <!-- Modal Title -->\n            <h3 class=\"text-xl font-semibold text-gray-900 mb-4\">Sensor Settings</h3>\n\n            <!-- Close Button -->\n            <button class=\"absolute top-4 right-4 text-gray-500 hover:text-red-900\" @click=\"$emit('close')\">X</button>\n\n            <!-- Name Section -->\n            <div class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-900 mb-2\">Change Sensor Name</h4>\n                <label class=\"text-lg font-small text-gray-900\" for=\"input-name\"> Name:\n                <input\n                    id=\"input-name\"\n                    v-model=\"localName\"\n                    type=\"text\"\n                    class=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900\"\n                />\n                </label>\n                <button\n                    @click=\"changeName\"\n                    class=\"mt-2 bg-primary text-black font-medium px-4 py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                    Change Name\n                </button>\n            </div>\n\n            <!-- Days Section -->\n            <div class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-900 mb-2\">Cronjob days [format: dd-dd]</h4>\n                <label class=\"text-lg font-small text-gray-900\" for=\"input-working-days\"> Days:\n                <input\n                    id=\"input-working-days\"\n                    v-model=\"newDay\"\n                    type=\"text\"\n                    placeholder=\"Set new working days\"\n                    class=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900\"\n                />\n                </label>\n                <button\n                    @click=\"changeDays\"\n                    class=\"mt-2 bg-primary text-black font-medium px-4 py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                    Change Days\n                </button>\n            </div>\n\n            <!-- Working Hours Section -->\n            <div class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-900 mb-2\">Cronjob Time</h4>\n                <div class=\"flex space-x-4\">\n                    <label class=\"text-lg font-small text-gray-900\" for=\"input-working-hours\"> Hours:\n                    <input\n                        id=\"input-working-hours\"\n                        v-model.number=\"localWorkingHours.hours\"\n                        type=\"number\"\n                        class=\"w-1/2 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900\"\n                        max=\"23\"\n                        min=\"0\"\n                        placeholder=\"Hours\"\n                    />\n                    </label>\n                    <label class=\"text-lg font-small text-gray-900\" for=\"input-working-minutes\"> Minutes:\n                    <input\n                        id=\"input-working-minutes\"\n                        v-model.number=\"localWorkingHours.minutes\"\n                        type=\"number\"\n                        max=\"59\"\n                        min=\"0\"\n                        class=\"w-1/2 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900\"\n                        placeholder=\"Minutes\"\n                    />\n                    </label>\n                </div>\n                <button\n                    @click=\"changeTime\"\n                    class=\"mt-2 bg-primary text-black px-4 font-medium py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                    Change Time\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { checkSensorDays, checkTime } from '@/apis/sensorRegistryApi';\nimport { UPDATE_CRONJOB_DAYS, UPDATE_CRONJOB_TIME, UPDATE_NAME_ACTION } from '@/headers/sensorHeaders';\nimport { ref, reactive } from 'vue';\nimport '@/assets/tailwind.css';\n\nconst props = defineProps({\n    name: { type: String, required: true },\n    workingHours: { type: Object, default: () => ({ hours: 0, minutes: 0 }) },\n});\n\nconst emit = defineEmits(['close', 'save']);\n\nconst localName = ref(props.name);\nconst localWorkingHours = reactive({ ...props.workingHours });\nconst newDay = ref('');\nconst message = {\n    action: '',\n    name: '',\n    days: '',\n    hour: '',\n    minute: '',\n};\n\nconst updateAction = (action: string) => {\n    message.action = action;\n};\n\nconst prepareUpdateName = (newName: string) => {\n    updateAction(UPDATE_NAME_ACTION);\n    message.name = newName;\n};\n\nconst prepareUpdateDays = (days: string) => {\n    updateAction(UPDATE_CRONJOB_DAYS);\n    message.days = days;\n};\n\nconst prepareUpdateTime = (hours: number, minutes: number) => {\n    updateAction(UPDATE_CRONJOB_TIME);\n    message.hour = String(hours);\n    message.minute = String(minutes);\n};\n\nconst close = () => {\n    emit('close');\n};\n\nconst changeDays = () => {\n    if (newDay.value.trim() && checkSensorDays(newDay.value)) {\n        prepareUpdateDays(newDay.value);\n        emit('save', message);\n        close();\n    } else {\n        alert('The input dayus should be formated like so: [0-6] and the values must be included in the range [0, 6]');\n    }\n};\n\nconst changeName = async () => {\n    if (localName.value.trim()) {\n        prepareUpdateName(localName.value);\n        emit('save', message);\n        close();\n    }\n};\n\nconst changeTime = async () => {\n    if (checkTime(localWorkingHours.hours, localWorkingHours.minutes)) {\n        prepareUpdateTime(localWorkingHours.hours, localWorkingHours.minutes);\n        emit('save', message);\n        close();\n    }\n};\n</script>\n","<template>\n    <div class=\"fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50\">\n        <div class=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 class=\"text-lg font-bold text-gray-800 mb-4\">Confirm Action</h2>\n            <p class=\"text-gray-600 mb-4\">Are you sure you want to proceed?</p>\n            <div class=\"flex justify-end space-x-4\">\n                <button\n                    @click=\"$emit('cancel')\"\n                    name=\"Confirm action\"\n                    class=\"px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400\"\n                >\n                    Cancel\n                </button>\n                <button\n                    @click=\"$emit('confirm')\"\n                    name=\"Cancel action\"\n                    class=\"px-4 py-2 bg-secondary text-white rounded hover:bg-red-700\"\n                >\n                    Confirm\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\ndefineEmits(['confirm', 'cancel']);\n</script>\n","<template>\n    <div class=\"bg-white shadow-md rounded-lg p-4 mb-4 w-full justify-between items-center hover:bg-gray-200\">\n        <div id=\"sensor-information\" class=\"space-y-2\">\n            <h3 class=\"block text-gray-700 font-medium\">IP: {{ ip }}</h3>\n            <h3 for=\"sensor-information\" class=\"block text-gray-700 font-medium\">Name: {{ name }}</h3>\n            <h3 class=\"block text-gray-700 font-medium\">Port: {{ port }}</h3>\n        </div>\n\n        <div class=\"flex space-x-2\">\n            <button\n                @click=\"showConfirmModal\"\n                class=\"bg-secondary text-white px-4 py-2 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500\"\n            >\n                Shut Down\n            </button>\n            <button\n                @click=\"toggleModal\"\n                class=\"bg-primary text-white px-4 py-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n                Settings\n            </button>\n        </div>\n\n        <SensorSettingsModal\n            v-if=\"isModalVisible\"\n            :name=\"name\"\n            :workingHours=\"workingHours\"\n            @close=\"toggleModal\"\n            @save=\"saveSettings\"\n        />\n    </div>\n\n    <ConfirmationModal v-if=\"isConfirmModalVisible\" @cancel=\"hideConfirmModal\" @confirm=\"shutDownSensor\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport SensorSettingsModal from '@/components/modal/SensorSettingsModal.vue';\nimport {\n    shutDownSensorApi,\n    updateSensorCronJobDays,\n    updateSensorCronJobTime,\n    updateSensorName,\n} from '@/apis/sensorRegistryApi';\nimport { useUserStore } from '@/stores/userStore';\nimport { HttpStatusCode } from 'axios';\nimport { defineEmits } from 'vue';\nimport '@/assets/tailwind.css';\nimport { UPDATE_CRONJOB_DAYS, UPDATE_CRONJOB_TIME, UPDATE_NAME_ACTION } from '@/headers/sensorHeaders';\nimport router from '@/router';\nimport ConfirmationModal from '../modal/ConfirmationModal.vue';\n\nconst userStore = useUserStore();\n\nconst emit = defineEmits(['removeSensor', 'updateSensorName']);\n\nconst props = defineProps({\n    ip: { type: String, default: '' },\n    name: { type: String, default: '' },\n    port: { type: String, default: '' },\n});\n\nconst isModalVisible = ref(false);\nconst isConfirmModalVisible = ref(false);\nconst workingHours = ref({ hours: 0, minutes: 0 });\n\nconst toggleModal = () => {\n    isModalVisible.value = !isModalVisible.value;\n};\n\nconst saveSettings = async (newSettings: { [key: string]: string }) => {\n    const action = newSettings.action;\n    const token = userStore.token.value;\n    switch (action) {\n        case UPDATE_NAME_ACTION: {\n            const response = await updateSensorName(token, props.ip, props.port, newSettings.name);\n            if (response.status === HttpStatusCode.Unauthorized) {\n                router.push('/login');\n            } else {\n                emit('updateSensorName', { ip: props.ip, port: props.port, name: newSettings.name });\n            }\n            return;\n        }\n        case UPDATE_CRONJOB_DAYS: {\n            const response = await updateSensorCronJobDays(token, props.ip, props.port, newSettings.days);\n            if (response.status === HttpStatusCode.Unauthorized) {\n                router.push('/login');\n            }\n            return;\n        }\n        case UPDATE_CRONJOB_TIME: {\n            const response = await updateSensorCronJobTime(\n                token,\n                props.ip,\n                props.port,\n                newSettings.hour,\n                newSettings.minute,\n            );\n            if (response.status === HttpStatusCode.Unauthorized) {\n                router.push('/login');\n            }\n            return;\n        }\n    }\n};\n\nconst hideConfirmModal = () => {\n    isConfirmModalVisible.value = false;\n};\n\nconst showConfirmModal = () => {\n    isConfirmModalVisible.value = true;\n};\n\nconst shutDownSensor = async () => {\n    const response = await shutDownSensorApi(userStore.token.value, props.ip, props.port);\n    if (response.status === HttpStatusCode.Ok) {\n        emit('removeSensor', { ip: props.ip, port: props.port });\n    }\n    hideConfirmModal();\n};\n</script>\n","interface Sensor {\n    ip: string;\n    name: string;\n    port: string;\n}\n\nclass BasicSensor implements Sensor {\n    ip: string;\n    name: string;\n    port: string;\n\n    constructor(ip: string, port: string, name: string = 'unknown') {\n        this.ip = ip;\n        this.port = port;\n        this.name = name;\n    }\n}\n\nexport { BasicSensor, type Sensor };\n","<template>\n    <div class=\"w-full max-w-3xl mx-auto\">\n        <div\n            id=\"search-engine\"\n            class=\"pb-10 sticky top-0 border-4 border-dashed border-secondary bg-white rounded p-2 mb-5 mt-2\"\n        >\n            <h2 class=\"text-gray-900 text-center font-bold\">Search a Sensor</h2>\n            <label class=\"text-lg font-medium text-gray-900\" for=\"input-name\">\n                Type a value:\n                <input\n                    name=\"input-name\"\n                    id=\"input-name\"\n                    type=\"text\"\n                    v-model=\"searchQuery\"\n                    placeholder=\"Search a sensor\"\n                    class=\"w-full p-2 border-2 border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900\"\n                />\n            </label>\n            <div id=\"radio-filters\" class=\"bg-white rounded-md mt-2\">\n                <h3 class=\"font-bold text-gray-900 text-center\">Filters:</h3>\n                <ul class=\"list-none mt-2\">\n                    <li v-for=\"filter in filters\" :key=\"filter\" class=\"mb-2 flex items-center gap-2 cursor-pointer\">\n                        <label\n                            class=\"text-lg font-medium text-gray-900 mt-4 block text-left\"\n                            :for=\"'radio-button-' + filter\"\n                        >\n                            {{ filter }}:\n                            <input\n                                type=\"radio\"\n                                :id=\"'radio-button-' + filter\"\n                                :value=\"filter\"\n                                v-model=\"selectedFilter\"\n                                name=\"search-group\"\n                                class=\"cursor-pointer font-medium\"\n                            />\n                        </label>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div id=\"sensor list\" class=\"sensor-list w-100\">\n            <ul class=\"overflow-auto\">\n                <li v-for=\"sensor in displayedSensor\" :key=\"sensor.ip\">\n                    <SensorItem\n                        :ip=\"sensor.ip\"\n                        :port=\"sensor.port\"\n                        :name=\"sensor.name\"\n                        @removeSensor=\"removeSensorFromList\"\n                        @updateSensorName=\"updateSensorName\"\n                    />\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport SensorItem from '@/components/List/ListComponent.vue';\nimport { getAllSensors } from '@/apis/sensorRegistryApi';\nimport { ref, onMounted, watch, type Ref } from 'vue';\nimport { useUserStore } from '@/stores/userStore';\nimport { BasicSensor, type Sensor } from '@/models/sensorModel';\nimport { AxiosError, HttpStatusCode } from 'axios';\nimport router from '@/router';\nconst sensors: Ref<Array<Sensor>> = ref([]);\nconst displayedSensor: Ref<Array<Sensor>> = ref([]);\nconst searchQuery = ref('');\nconst filters = ['ip', 'port', 'name'];\nconst selectedFilter = ref(filters[0]);\nconst userStore = useUserStore();\n\nonMounted(async () => {\n    const token = userStore.token.value;\n    try {\n        const response = await getAllSensors(token);\n        response.data.sensors.forEach((element: Sensor) => {\n            sensors.value.push(new BasicSensor(element.ip, String(element.port), element.name || 'unknown'));\n            displayedSensor.value.push(new BasicSensor(element.ip, String(element.port), element.name || 'unknown'));\n        });\n    } catch (error) {\n        if (error instanceof AxiosError && error.status === HttpStatusCode.Unauthorized) {\n            router.push('/login');\n        }\n    }\n});\n\nconst removeSensorFromList = (sensorToRemove: { ip: string; port: string }) => {\n    displayedSensor.value = displayedSensor.value.filter(\n        (sensor) => sensor.ip !== sensorToRemove.ip || sensor.port !== sensorToRemove.port,\n    );\n};\n\nconst updateSensorName = (sensorInfo: { ip: string; port: string; name: string }) => {\n    displayedSensor.value\n        .filter((sensor) => sensor.ip === sensorInfo.ip && sensor.port === sensorInfo.port)\n        .forEach((sensor) => (sensor.name = sensorInfo.name));\n};\n\nconst filterSensors = () => {\n    const filterKey: string = selectedFilter.value.toLowerCase();\n    const query = searchQuery.value;\n\n    if (!query) {\n        return sensors.value;\n    }\n\n    const filterMap: { [key: string]: (v: Sensor) => boolean } = {\n        ip: (sensor: Sensor) => sensor.ip.includes(query),\n        port: (sensor: Sensor) => sensor.port.includes(query),\n        name: (sensor: Sensor) => sensor.name.includes(query),\n    };\n\n    const filterFunction = filterMap[filterKey] || (() => []);\n    return sensors.value.filter(filterFunction);\n};\n\nwatch(searchQuery, () => {\n    displayedSensor.value = filterSensors();\n});\n</script>\n"],"names":["SENSOR_PORT","SENSOR_IP","SENSOR_NAME","SENSOR_CRONJOB_DAYS","SENSOR_CRONJOB_TIME_HOUR","SENSOR_CRONJOB_TIME_MINUTE","UPDATE_NAME_ACTION","UPDATE_CRONJOB_DAYS","UPDATE_CRONJOB_TIME","GET_ALL_SENSOR_PATH","config","SHUT_DOWN_SENSOR_PATH","UPDATE_SENSOR_PATH","checkSensorDays","days","splitted_days","checkTime","hours","minutes","getAllSensors","token","headers","USER_TOKEN_HEADER","axios","shutDownSensorApi","ip","port","data","updateSensorApi","newInformation","key","updateSensorName","newName","updateSensorCronJobDays","updateSensorCronJobTime","hour","minute","props","__props","emit","__emit","localName","ref","localWorkingHours","reactive","newDay","message","updateAction","action","prepareUpdateName","prepareUpdateDays","prepareUpdateTime","close","changeDays","changeName","changeTime","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_cache","$emit","_hoisted_3","_hoisted_4","$event","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","userStore","useUserStore","isModalVisible","isConfirmModalVisible","workingHours","toggleModal","saveSettings","newSettings","HttpStatusCode","router","hideConfirmModal","showConfirmModal","shutDownSensor","_createBlock","SensorSettingsModal","ConfirmationModal","BasicSensor","name","__publicField","sensors","displayedSensor","searchQuery","filters","selectedFilter","onMounted","element","error","AxiosError","removeSensorFromList","sensorToRemove","sensor","sensorInfo","filterSensors","filterKey","query","filterFunction","watch","_Fragment","_renderList","filter","_createTextVNode","_toDisplayString","_createVNode","SensorItem"],"mappings":"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"}